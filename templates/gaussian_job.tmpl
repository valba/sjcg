#!/bin/bash

###############################
#  Configuracion del trabajo  #
###############################
## Utilizar la shell de bash (RECOMENDABLE)
#$ -S /bin/bash

## Importar las variables de entorno del sistema (como $PWD, $USERNAME, $PATH, etc.) 
## (MUY RECOMENDABLE)
#$ -V

# Ejecutar el trabajo en el directorio actual (RECOMENDABLE)
#$ -cwd

## Ejecutar en una cola determinada (RECOMENDABLE)
#$ -q epsilon@compute-2-0

## Limite del tiempo de ejecuccion
##$ -l h_rt=20000:00:00
## Reserva de Shared RAM
#$ -l h_vmem=10000M

## Activar paralelización (OBLIGATORIO PARA TRABAJOS EN PARALELO)
## PEV   = make, mpi, smp
## NPROC = número de procesadores
#$ -pe mpi !__SGE-NUM-PROCESSORS__!

## Nombre del trabajo (OPCIONAL)
#$ -N !__SGE-JOB_NAME__!

## Log de salida (OPCIONAL)
#$ -o !__SGE-JOB_NAME__!.log

## Log de error (OPCIONAL)
#$ -e error_!__SGE-JOB_NAME__!.log

## Fusionar salida y error en el mismo archivo (OPCIONAL)                                      
#$ -j n

## Asignar espacio requerido para el trabajo indicado en GB y entre " " (>=100 -> partition1, <100 -> partition2)
## Solo disponible en las colas ALPHA, BETA y DSETA ya que son las unicas con 2 discos de scratch
## En las demas colas siempre ira a partition1 sea cual sea el valor de DiskSpace 
DiskSpace="50"

#########################
#  Comandos a ejecutar  #
#########################
## NO MODIFICAR ESTA LINEA (permite asignar que disco de scratch usar)
source /usr/local/jobs/scratch.sh $DiskSpace


echo 
echo "01.- LOADING VARIABLES ..."
## SGE INPUT
## JOB_NAME (i.e. substance_method)
JOB_NAME=!__SGE-JOB_NAME__!

## SGE OUTPUT_DIR
## LOG (i.e. substance_method.log)
LOG="${JOB_NAME}.log"
## ELOG (i.e. error_substance_method.log)
ELOG="error_${JOB_NAME}.log"
## OUTPUT_DIR
OUTPUT_DIR="${SGE_O_WORKDIR}/${JOB_NAME}/${JOB_NAME}_${JOB_ID}"

## GAUSSIAN INPUT
GNAME=!__GAUSSIAN-JOB_NAME__!
## GAUSSIAN JOB FILE
GJF="${GNAME}.gjf"
## GAUSSIAN INITIAL CHECKPOINT FILE
#CHK=test0276.chk

## GAUSSIAN OUTPUT_DIR
GLOG="${GNAME}.log"
## GAUSSIAN FINAL CHECKPOINT FILE
CHKF="${GNAME}.chk"
## GAUSSIAN FINAL FORMATED CHECKPOINT FILE
FCHKF="${GNAME}.fchk"
## GAUSSIAN READ-WRITE FILE
RWF="${GNAME}.rwf"
## GAUSSIAN SCRATCH DIRECTORY
#SCRATCH_DIR="${HOME}/SCRATCH" # Only for bigger than 2 TB scratch files if available. Slower Shared NFS Drive.  WARNING: IT MAY AFFECT OTHER USERS. USE IT WITH CARE AND PERMISSON !!!
SCRATCH_DIR="${TMPDIR}/SCRATCH" # Default location. Faster SSD Hard Drive. Highly recommended.
echo "... VARIABLES LOADED."

## SGE HISTORY 
SGE_HISTORY_JSON="${HOME}/.sge_history.json"
STARTING_TIME="$(date +"%Y-%m-%d %H:%M:%S")"
JOB_TYPE="GAUSSIAN"

## module unload MODULO_NO_DESEADO 
## module load MODULO_DESEADO


echo 
echo "02.- LOADING GAUSSIAN MODULE ..."
module use /share/modules
module load gaussian/g16_2021
echo "... GAUSSIAN MODULE LOADED."


echo 
echo "03.- CREATING SCRATCH DIRECTORY: ${SCRATCH_WORKDIR}"
echo "..."
SCRATCH_WORKDIR="${SCRATCH_DIR}/${JOB_NAME}_${JOB_ID}"
[ ! -d ${SCRATCH_WORKDIR} ] && mkdir -p ${SCRATCH_WORKDIR}
cp -r ${SGE_O_WORKDIR}/${GJF} ${SCRATCH_WORKDIR}
cd ${SCRATCH_WORKDIR}
echo "... SCRATCH DIRECTORY CREATED."


echo 
echo "04.- LAUNCHING GAUSSIAN: "
echo "/share/bin/gaussian16 -y=${CHKF} -z=${RWF} -fchk=${FCHKF} < ${GJF} > >(tee ${SGE_O_WORKDIR}/${GLOG} ${GLOG} > /dev/null)"
echo "..."
/share/bin/gaussian16 -y=${CHKF} -z=${RWF} -fchk=${FCHKF} < ${GJF} > >(tee ${SGE_O_WORKDIR}/${GLOG} ${GLOG} > /dev/null)
echo "... GAUSSIAN LAUNCHED."


echo 
echo "05.- SAVING GAUSSIAN OUTPUT FILES IN ${SGE_O_WORKDIR}/${JOB_NAME}"
echo "..."
[ ! -d ${SGE_O_WORKDIR}/${JOB_NAME} ] && mkdir -p ${SGE_O_WORKDIR}/${JOB_NAME}
mv ${SCRATCH_WORKDIR} ${OUTPUT_DIR}
echo "... GAUSSIAN OUTPUT FILES SAVED IN ${OUTPUT_DIR}"

##/share/software-build/gaussian16/g16/formchk $CHK.chk $CHK.fchk

echo 
echo "06.- SAVING SGE OUTPUT FILES IN ${OUTPUT_DIR}"
echo "..."
[ -f ${SGE_O_WORKDIR}/${LOG} ] && mv ${SGE_O_WORKDIR}/${LOG} ${OUTPUT_DIR}/
[ -f ${SGE_O_WORKDIR}/${ELOG} ] && mv ${SGE_O_WORKDIR}/${ELOG} ${OUTPUT_DIR}/
echo "... SGE OUTPUT FILES SAVED IN ${OUTPUT_DIR}"

echo 
echo "07.- SAVING SGE INPUT FILES IN ${OUTPUT_DIR}"
echo "..."
cp ${SGE_O_WORKDIR}/${JOB_NAME}.job ${OUTPUT_DIR}
echo "... SGE INPUT FILES SAVED IN ${OUTPUT_DIR}"
echo 

echo 
echo "08.- ANALYZING GAUSSIAN LOG ..."
GSTATUS="Not available"
if grep -q 'Normal termination' ${OUTPUT_DIR}/${GLOG}; then
    echo "Gaussian Normal termination"
    GSTATUS="Normal Termination"
else
    [-f ${OUTPUT_DIR}/${GLOG}] && mv ${OUTPUT_DIR}/${GLOG} ${OUTPUT_DIR}/"error_${GLOG}" && echo "Gaussian Error" && GSTATUS="Error found"
    echo "No Gaussian log file found"
fi
echo "... GAUSSIAN LOG ANALYZED."

echo "SGE JOB SUCCESSFULLY FINISHED!"

ENDING_TIME="$(date +"%Y-%m-%d %H:%M:%S")"

JOB_RECORD="{
\"JobID\": \"${JOB_ID}\",
\"StartingTimestamp\": \"${STARTING_TIME}\",
\"UserName\": \"${SGE_O_LOGNAME}\",
\"JobType\": \"${JOB_TYPE}\",
\"JobName\": \"${JOB_NAME}\",
\"InputDir\": \"${SGE_O_WORKDIR}\",
\"OutputDir\": \"${OUTPUT_DIR}\",
\"GaussianJobFile\": \"${GJF}\",
\"GaussianLogFile\": \"${GLOG}\",
\"GaussianStatus\": \"${GSTATUS}\",
\"SGELogFile\": \"${LOG}\",
\"EndingTimestamp\": \"${ENDING_TIME}\",
\"Node\": \"${HOSTNAME}\",
\"Queue\": \"${QUEUE}\",
\"NumProcessors\": \"${NSLOTS}\",
\"FrontEnd\": \"${SGE_O_HOST}\"
}"

[ ! -f ${SGE_HISTORY_JSON} ] && touch ${SGE_HISTORY_JSON}
echo "${JOB_RECORD}" >> ${SGE_HISTORY_JSON}
